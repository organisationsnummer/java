plugins {
    id 'maven-publish'
    id 'java'
    id 'java-library'
    id 'signing'
    id 'tech.yanand.maven-central-publish' version '1.3.0'
}

group 'dev.organisationsnummer'
version = System.getenv("RELEASE_VERSION") ?: 'NONE'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.12.0', 'org.junit.jupiter:junit-jupiter-params:5.12.0', 'org.json:json:20250107'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.12.0', 'org.junit.platform:junit-platform-launcher'

    implementation 'dev.personnummer:personnummer:3.5.0'
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

java {
    withJavadocJar()
    withSourcesJar()

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

artifacts {
    archives javadocJar, sourcesJar, jar
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = "full"
    }
}

// Release

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/organisationsnummer/java")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        mavenJava (MavenPublication) {
            version = System.getenv("RELEASE_VERSION")
            groupId = 'dev.organisationsnummer'
            from components.java
            pom {
                name = 'Organisationsnummer'
                description = 'Organisationsnummer is a small open-source project created to validate, format and getting the organization type from swedish organization numbers.'
                url = 'https://organisationsnummer.dev'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://mit-license.org/'
                    }
                }
                developers {
                    developer {
                        id = 'jite'
                        name = 'Johannes Tegn√©r'
                        email = 'johannes@jitesoft.com'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:organisationsnummer/java.git'
                    url = 'https://github.com/organisationsnummer/java'
                }
            }
        }
    }
}

signing {
    def signingKeyId = "C5D41C23" // Short format key-id of signing key.
    def signingKey = findProperty("signingKey") ?: "key"
    def signingPassword = findProperty("signingPassword") ?: "pass"
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

tasks.withType(Sign) {
    onlyIf { version != "NONE" }
}

mavenCentral {
    // Docs: https://github.com/yananhub/flying-gradle-plugin
    authToken = findProperty("mavenToken")
    publishingType = 'AUTOMATIC'
    maxWait = 60
}
